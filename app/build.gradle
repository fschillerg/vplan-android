apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'realm-android'

apply plugin: 'io.gitlab.arturbosch.detekt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "de.fschillerg.vplan"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 0
        versionName "0.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
        }
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint 'com.github.shyiko:ktlint:0.27.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:support-vector-drawable:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:preference-v7:28.0.0'

    implementation 'android.arch.work:work-runtime-ktx:1.0.0-alpha11'
    implementation 'de.adorsys.android:securestoragelibrary:1.0.2'
    implementation 'com.evrencoskun.library:tableview:0.8.8'
    implementation 'io.karn:notify:1.1.0'
    implementation 'com.afollestad.material-dialogs:core:2.0.0-alpha05'
    implementation 'com.mikepenz:aboutlibraries:6.1.1'
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
}

def rustBase = ".."
def cargoOutput = "${rustBase}/target"
def archTriplets = ['armeabi-v7a' : 'arm-linux-androideabi',
                    'arm64-v8a'   : 'aarch64-linux-android',
                    'x86'         : 'i686-linux-android',
                    'x86_64'      : 'x86_64-linux-android']

archTriplets.each { arch, target ->
    tasks.create(name: "rust-build-${target}", type: Exec, description: "Build Rust for ${target}") {
        workingDir rustBase
        if (target == 'arm-linux-androideabi' || target == 'i686-linux-android') {
            environment 'CFLAGS', '-D__ANDROID_API__'
        }
        commandLine 'cargo', 'build', "--target=${target}", '--release'
    }

    tasks.create(name: "rust-deploy-${target}", type: Copy, dependsOn: "rust-build-${target}", description: "Copy Rust libs for ${target} to jniLibs") {
        from "${cargoOutput}/${target}/release"
        include "*.so"
        into "src/main/jniLibs/${arch}"
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn "rust-deploy-${target}"
    }

    preBuild.dependsOn "rust-deploy-${target}"

    tasks.create(name: "clean-${arch}", type: Delete, description: "Delete Rust libs for ${arch}") {
        delete fileTree("${cargoOutput}/${target}/release") {
            include '*.so'
        }
    }

    clean.dependsOn "clean-${arch}"
}
